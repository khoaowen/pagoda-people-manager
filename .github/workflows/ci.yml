name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  checks: write
  contents: read
env:
  JAVA_VERSION: 21

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Run unit tests
        run: mvn clean test -Punit-tests

      - name: Publish unit test report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Unit Tests
          path: "**/target/surefire-reports/*.xml"
          reporter: java-junit

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Run integration tests
        run: mvn clean verify -Pintegration-tests

      - name: Publish integration test report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Integration Tests
          path: "**/target/failsafe-reports/TEST-*.xml"
          reporter: java-junit

  aggregate-coverage:
    name: Aggregate Coverage
    runs-on: ubuntu-latest
    needs: [ unit-tests, integration-tests ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Generate reports
        run: mvn verify -Pcoverage-report

      - name: Generate merged report from report-aggregate module
        run: mvn clean verify -pl report-aggregate -am

      - name: Upload merged jacoco report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: report-aggregate/target/site/jacoco-aggregate/jacoco.xml

  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: [ aggregate-coverage ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Download jacoco report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: jacoco-report

      - name: Run Sonar analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Pcoverage-report
          -Dsonar.projectKey=khoaowen_pagoda-people-manager
          -Dsonar.qualitygate.wait=true
  build:
    name: Build After Tests
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - run: mvn clean install -Pskip-all-tests